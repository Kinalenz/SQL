Subqueries

Practice Problem 1 Subqueries

SELECT sub_my.*
  FROM ( SELECT *
            FROM tutorial.sf_crime_incidents_2014_01
            WHERE descript = 'WARRANT ARREST' ) sub_my 
  WHERE sub_my.resolution ILIKE 'none' 


/* Write a query that selects all Warrant Arrests from the tutorial.sf_crime_incidents_2014_01 dataset, 
   then wrap it in an outer query that only displays unresolved incidents. */
        

Practice Problem 2

SELECT sub.category,
       AVG(sub.incidents)
  FROM ( SELECT category,
                DATE_TRUNC('month', cleaned_date),
                COUNT(incidnt_num) As incidents
          FROM tutorial.sf_crime_incidents_cleandate
          GROUP BY 1,2
          ORDER BY 2
        ) sub
  GROUP BY 1
  ORDER BY 1

/* Write a query that displays the average number of monthly incidents for each category. 
  Hint: use tutorial.sf_crime_incidents_cleandate to make your life a little easier. */


Practice Problem 3

SELECT incidents.*,
       sub.count AS total_incidents_per_category
  FROM tutorial.sf_crime_incidents_2014_01 incidents
  JOIN ( 
        SELECT category,
               COUNT(*) AS count
          FROM  tutorial.sf_crime_incidents_2014_01
          GROUP BY 1
          ORDER BY 2
          LIMIT 3
        ) sub
    ON sub.category = incidents.category 


/* Write a query that displays all rows 
  from the three categories 
  with the fewest incidents reported. */


Practice Problem 4

SELECT COALESCE(acquisitions.quarter, companies.quarter) AS quarter,
       acquisitions.companies_acquired,
       companies.companies_founded
  FROM 
        (
          SELECT acquired_quarter AS quarter,
                 COUNT(DISTINCT company_permalink) AS companies_acquired
            FROM tutorial.crunchbase_acquisitions 
            WHERE acquired_quarter >= '2012-Q1'
            GROUP BY 1
        ) acquisitions
        
    FULL JOIN     
      
        (
          SELECT founded_quarter AS quarter,
                 COUNT(permalink) AS companies_founded
            FROM tutorial.crunchbase_companies
            WHERE founded_quarter >= '2012-Q1'
            GROUP BY 1
        ) companies
      
    ON acquisitions.quarter = companies.quarter
  ORDER BY 1

/* Write a query that counts the number of companies 
  founded and acquired by quarter starting in Q1 2012. 
  Create the aggregations in two separate queries, then join them. */
  
-- tutorial.crunchbase_acquisitions
-- tutorial.crunchbase_investments


Practice Problem 5

SELECT investor_name,
       COUNT(*) AS investments
  FROM (
         SELECT *
            FROM  tutorial.crunchbase_investments_part1
          
          UNION ALL
          
          SELECT *
            FROM  tutorial.crunchbase_investments_part2
        ) sub
  GROUP BY 1
  ORDER BY 2 DESC

/* Write a query that ranks investors 
  from the combined dataset above 
  by the total number of investments they have made. */
  
-- tutorial.crunchbase_investments_part1


Practice Problem 6

SELECT investments.investor_name,
       COUNT(investments.*) AS investments
  FROM tutorial.crunchbase_companies companies
  JOIN (
        SELECT *
          FROM  tutorial.crunchbase_investments_part1
          
          UNION ALL
          
          SELECT *
            FROM  tutorial.crunchbase_investments_part2
       ) investments
    ON investments.company_permalink = companies.permalink
  WHERE companies.status = 'operating'
  GROUP BY 1
  ORDER BY 2 DESC

      
/* Write a query that does the same thing as in the previous problem, 
  except only for companies that are still operating. 
  Hint: operating status is in tutorial.crunchbase_companies. */

