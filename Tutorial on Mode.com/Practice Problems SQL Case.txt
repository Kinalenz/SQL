â€¢	SQL Case

Practice Problem 1

SELECT player_name, state, 
       CASE WHEN state = 'CA' THEN 'Yes' 
       ELSE NULL END AS from_california
  FROM benn.college_football_players
ORDER BY from_california


Practice Problem 2
SELECT player_name,
       height,
       CASE WHEN height > 75 THEN 'over 75'
            WHEN height >= 70 AND height <= 75 THEN '70-75'
            WHEN height >= 65 AND height <= 69 THEN '65-69'
            ELSE 'under 65' END AS height_group
  FROM benn.college_football_players
        ORDER BY height_group


Practice Problem 3

SELECT *,
      CASE WHEN year = 'JR' OR year = 'SO' THEN player_name
      ELSE NULL END AS "JR or SO" 
  FROM benn.college_football_players


Practice Problem 4

SELECT CASE WHEN state IN ('CA', 'OR', 'WA') THEN 'West_Coast'
            WHEN state ='TX' THEN 'Texas'
            ELSE 'Other' END AS Selected_Region, 
            COUNT(1)
  FROM benn.college_football_players
  WHERE weight >= 300
  GROUP BY 1
  
  -- count 
  -- weight > 300
  -- state CA OR WA and Texas and Other


Practice Problem 5

SELECT CASE WHEN year in ('FR', 'SO') THEN 'Underclass Players'
            WHEN year in ('JR', 'SR') THEN 'Upperclass Players'
            ELSE NULL END AS class_group,
            SUM (weight) AS player_weight
  FROM benn.college_football_players
    WHERE state = 'CA'
    GROUP BY 1


  /* sum weight for   year = FR and SO (underclass players)  state CA
  sum weight for   year = JR and SR (upperclass players)  state CA *


Practice Problem 6

SELECT state,
       COUNT(CASE WHEN year = 'FR' THEN 1 ELSE NULL END) AS fr_count,
       COUNT(CASE WHEN year = 'SO' THEN 1 ELSE NULL END) AS so_count,
       COUNT(CASE WHEN year = 'JR' THEN 1 ELSE NULL END) AS jr_count,
       COUNT(CASE WHEN year = 'SR' THEN 1 ELSE NULL END) AS sr_count,
       COUNT(state) AS total
  FROM benn.college_football_players
  GROUP BY state
  ORDER BY total DESC
 

  
  /* create separate columns FR SO JR SR
     create a TOTAL column
     count players for each state 
     order by state with highest number of players  */


Practice Problem 7 

SELECT CASE WHEN school_name < 'n' THEN 'A_M'
            WHEN school_name >='n' THEN 'N_Z'
            ELSE NULL END AS name_group,
       COUNT (1) AS players
  FROM benn.college_football_players
GROUP BY 1

